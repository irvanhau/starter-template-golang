name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{secrets.DOCKERHUB_USERNAME}}/app:latest
      - name: connect ssh
        uses: appleboy/ssh-action@v0.1.9
        env:
          DB_USER: ${{ secrets.DBUSER }}
          DB_PASS: ${{ secrets.DBPASS }}
          DB_PORT: ${{ secrets.DBPORT }}
          DB_NAME: ${{ secrets.DBNAME }}
          DB_HOST: ${{ secrets.DBHOST }}
          SERVER_PORT: ${{ secrets.SERVER }}
          JWT_SECRET: ${{ secrets.JWTSECRET }}
          REF_SECRET: ${{ secrets.REFSECRET }}
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.USERNAME}}
          key: ${{secrets.KEY}}
          port: ${{secrets.PORT}}
          envs: DB_USER, DB_PASS, DB_PORT, DB_NAME,SERVER_PORT,JWT_SECRET,REF_SECRET,DB_HOST
          script: |
            export DBUSER=$DB_USER
            export DBPASS=$DB_PASS
            export DBPORT=$DB_PORT
            export DBNAME=$DB_NAME
            export DBHOST=$DB_HOST
            export SERVER=$SERVER_PORT
            export SECRET=$JWT_SECRET
            export REFSECRET=$REF_SECRET

            sudo docker stop app
            sudo docker rm app
            sudo docker rmi ${{secrets.DOCKERHUB_USERNAME}}/app:latest
            sudo docker pull ${{secrets.DOCKERHUB_USERNAME}}/app:latest
            curl -H "Accept: application/vnd.github+json"  -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: token ${{secrets.TOKEN_GITHUB}}" -LJO https://raw.githubusercontent.com/irvanhau/starter-template/main/docker-compose.yaml
            # this for MySQL backup
            # docker exec mysql /usr/bin/mysqldump -u ${{secrets.DBUSER}} --password=${{secrets.DBPASS}} ${{secrets.DBNAME}} > backup_db.sql
            docker compose down -v
            docker compose up -d
            # this for MySQL Restore
            # docker exec -i mysql mysql -u ${{secrets.DBUSER}} --password=${{secrets.DBPASS}} ${{secrets.DBNAME}} < backup_db.sql
