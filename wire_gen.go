// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"starter-template/configs"
	"starter-template/features/users"
	"starter-template/features/users/handler"
	"starter-template/features/users/repository"
	"starter-template/features/users/service"
	"starter-template/helper/jwt"
	"starter-template/routes"
	"starter-template/server"
	"starter-template/utils/database"
)

// Injectors from injector.go:

func InitializedServer() *server.Server {
	programConfig := configs.InitConfig()
	jwtInterface := jwt.NewJWT(programConfig)
	db := database.InitDB(programConfig)
	userData := repository.NewRepository(db)
	userService := service.NewService(jwtInterface, userData)
	userHandler := handler.NewHandler(userService, jwtInterface)
	echo := routes.NewRoute(programConfig, userHandler)
	serverServer := server.InitServer(programConfig, echo)
	return serverServer
}

// injector.go:

var userSet = wire.NewSet(repository.NewRepository, wire.Bind(new(users.UserDataInterface), new(*repository.UserData)), service.NewService, wire.Bind(new(users.UserServiceInterface), new(*service.UserService)), handler.NewHandler, wire.Bind(new(users.UserHandlerInterface), new(*handler.UserHandler)))
